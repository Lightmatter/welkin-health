name: CI

on: [pull_request, workflow_dispatch, workflow_call]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
      - name: Checkout ${{ github.repository }}
        uses: actions/checkout@v4

      - name: Setup Python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached environment
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        id: poetry-install
        run: poetry install --no-interaction

      - name: Run pre-commit
        run: poetry run pre-commit run --all-files

      - name: Run Tests
        shell: bash
        run: |
          poetry run pytest \
          --junitxml=pytest.xml \
          --cov-report=term-missing:skip-covered \
          --cov=welkin | tee pytest-coverage.txt

      - name: Add coverage comment
        uses: MishaKav/pytest-coverage-comment@main
        continue-on-error: true
        with:
          pytest-coverage-path: ./pytest-coverage.txt
          junitxml-path: ./pytest.xml
          report-only-changed-files: true
          title: Coverage Report (Python ${{ matrix.python-version }})
          unique-id-for-comment: ${{ matrix.python-version }}
          remove-link-from-badge: true
